<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ReFlasher.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ReFlasher.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6210000: Last Updated: Thu Apr 18 19:36:40 2024
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; sFLASH_Init &rArr; GPIO_InitPeripheral
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1b]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ADC_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[2d]">assert_failed</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">assert_failed</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ADC_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[25]">COMP_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[11]">DMA_Channel1_2_3_4_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[10]">DMA_Channel1_2_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[15]">DMA_Channel3_4_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[12]">DMA_Channel5_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[c]">EXTI0_1_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[d]">EXTI2_3_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[e]">EXTI4_15_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[a]">FLASH_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[20]">HDIV_SQRT_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32g031_it.o(.text.HardFault_Handler) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[1e]">I2C2_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[1a]">LPTIM_TIM6_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[23]">LPUART_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[9]">MMU_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from n32g031_it.o(.text.NMI_Handler) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from n32g031_it.o(.text.PendSV_Handler) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[21]">RAMC_PERR_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[b]">RCC_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[f]">RESERVE9_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[1f]">SPI1_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from n32g031_it.o(.text.SVC_Handler) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from n32g031_it.o(.text.SysTick_Handler) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_n32g031.o(.text.SystemInit) referenced from startup_n32g031.o(.text)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[18]">TIM8_BRK_UP_TRG_COM_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[19]">TIM8_CC_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[22]">USART1_2_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[24]">USART1_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[17]">USART2_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_n32g031.o(.text) referenced from startup_n32g031.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32g031.o(.text)
 <LI><a href="#[26]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[41]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[42]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[43]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[44]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[45]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA_Channel1_2_3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>HDIV_SQRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>LPTIM_TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>LPUART_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>MMU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>RAMC_PERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RESERVE9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM8_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USART1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32g031.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[46]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>GPIO_InitPeripheral</STRONG> (Thumb, 648 bytes, Stack size 56 bytes, n32g031_gpio.o(.text.GPIO_InitPeripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>GPIO_InitStruct</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, n32g031_gpio.o(.text.GPIO_InitStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_InitStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e]"></a>GPIO_ResetBits</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, n32g031_gpio.o(.text.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>GPIO_SetBits</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, n32g031_gpio.o(.text.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetBits
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g031_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g031_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g031_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>RCC_EnableAPB2PeriphClk</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, n32g031_rcc.o(.text.RCC_EnableAPB2PeriphClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_EnableAPB2PeriphClk
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>SPI_Enable</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, n32g031_spi.o(.text.SPI_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
</UL>

<P><STRONG><a name="[32]"></a>SPI_I2S_GetStatus</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, n32g031_spi.o(.text.SPI_I2S_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
</UL>

<P><STRONG><a name="[33]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, n32g031_spi.o(.text.SPI_I2S_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
</UL>

<P><STRONG><a name="[34]"></a>SPI_I2S_TransmitData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, n32g031_spi.o(.text.SPI_I2S_TransmitData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_I2S_TransmitData
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
</UL>

<P><STRONG><a name="[35]"></a>SPI_Init</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, n32g031_spi.o(.text.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g031_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32g031_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, system_n32g031.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32g031.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>assert_failed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text.assert_failed))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 496 bytes, Stack size 64 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; sFLASH_Init &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadBuffer
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_ReadID
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[3c]"></a>sFLASH_EraseBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, spi_flash.o(.text.sFLASH_EraseBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sFLASH_EraseBulk &rArr; sFLASH_WaitForWriteEnd &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>sFLASH_EraseSector</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, spi_flash.o(.text.sFLASH_EraseSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sFLASH_EraseSector &rArr; sFLASH_WaitForWriteEnd &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>sFLASH_Init</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, spi_flash.o(.text.sFLASH_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sFLASH_Init &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Enable
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>sFLASH_ReadBuffer</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, spi_flash.o(.text.sFLASH_ReadBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sFLASH_ReadBuffer &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>sFLASH_ReadID</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, spi_flash.o(.text.sFLASH_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sFLASH_ReadID &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>sFLASH_WaitForWriteEnd</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, spi_flash.o(.text.sFLASH_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sFLASH_WaitForWriteEnd &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>

<P><STRONG><a name="[3a]"></a>sFLASH_WriteBuffer</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, spi_flash.o(.text.sFLASH_WriteBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sFLASH_WriteBuffer &rArr; sFLASH_WritePage &rArr; sFLASH_WaitForWriteEnd &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>sFLASH_WriteEnable</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, spi_flash.o(.text.sFLASH_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sFLASH_WriteEnable &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WritePage
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseBulk
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_EraseSector
</UL>

<P><STRONG><a name="[3f]"></a>sFLASH_WritePage</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, spi_flash.o(.text.sFLASH_WritePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sFLASH_WritePage &rArr; sFLASH_WaitForWriteEnd &rArr; SPI_I2S_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WaitForWriteEnd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteEnable
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetStatus
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_TransmitData
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sFLASH_WriteBuffer
</UL>

<P><STRONG><a name="[47]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[48]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[49]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
